#10844        
n = int(input())
dp = [[0 for i in range(10)] for j in range(101)]
for i in range(1, 10):
    dp[1][i] = 1
for i in range(2, n + 1):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i - 1][1]
        elif j == 9:
            dp[i][j] = dp[i - 1][8]
        else:
            dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j + 1]
print(sum(dp[n]) % 1000000000)

#이번 문제를 통해서 또다시 꺠닫게 된다.
#구조화 -> 배열에 그림을 그릴줄 알아야한다. -> 그게 코드가 되는거다
#규칙을 찾는게 중요하다. 이번에 규칙을 찾는게 힘들었다.
    
#11057 -> 위 문제와 유사한 쉬운 dp 문제라고 한다.

근데 나는 겁나 어려웠다.

처음에 이렇게 짜서 제출했는데 틀렸다고한다.

#11057

n = int(input())
dp = [[0]*10]*(n)
#dp[0] = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
for i in range(10):
    dp[0][i] = 1
if n >= 2:
    dp[1] = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
x = 1
for i in range(2, n):
    for j in range(10):
        dp[i][j] = dp[i-1][j] *x
        x = x+1
print(sum(dp[n-1])%100007)

나름대로 규칙을 찾았다고 생각했지만 많이 다른 규칙이 있었다.

그래서 참고했다
#<3중 for문을 활용한 제일 기가막힌 예시>

n = int(input())
dp = [[0 for _ in range(10)] for _ in range(n+1)]
for i in range(10):
    dp[1][i] = 1

for i in range(2, n+1):
    for j in range(10):
        for k in range(j, 10):
            dp[i][j] += dp[i-1][k]

print(sum(dp[n]) % 10007)    

#다음에 풀어볼때는 잘 풀어봐야곘다.
